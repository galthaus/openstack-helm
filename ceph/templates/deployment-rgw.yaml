{{- if .Values.rgw.enabled }}
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  labels:
    app: ceph
    daemon: rgw 
  name: ceph-rgw
spec:
  replicas: {{ .Values.replicas.rgw }}
  template:
    metadata:
      name: ceph-rgw
      labels:
        app: ceph
        daemon: rgw
    spec:
      nodeSelector:
        {{ .Values.labels.node_selector_key }}: {{ .Values.labels.node_selector_value }}
      serviceAccount: default
      volumes:
        - name: ceph-conf
          secret:
            secretName: ceph-conf-combined
        - name: ceph-bootstrap-osd-keyring
          secret:
            secretName: ceph-bootstrap-osd-keyring
        - name: ceph-bootstrap-mds-keyring
          secret:
            secretName: ceph-bootstrap-mds-keyring
        - name: ceph-bootstrap-rgw-keyring
          secret:
            secretName: ceph-bootstrap-rgw-keyring
      containers:
        - name: ceph-rgw
          image: {{ .Values.images.daemon }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
          ports:
            - containerPort: {{ .Values.network.port.rgw_target }}
          env:
            - name: RGW_CIVETWEB_PORT
              value: "{{ .Values.network.port.rgw_target }}"
            - name: CEPH_DAEMON
              value: RGW
            - name: KV_TYPE
              value: k8s
            - name: CLUSTER
              value: ceph
          volumeMounts:
            - name: ceph-conf
              mountPath: /etc/ceph
            - name: ceph-bootstrap-osd-keyring
              mountPath: /var/lib/ceph/bootstrap-osd
            - name: ceph-bootstrap-mds-keyring
              mountPath: /var/lib/ceph/bootstrap-mds
            - name: ceph-bootstrap-rgw-keyring
              mountPath: /var/lib/ceph/bootstrap-rgw
          livenessProbe:
              httpGet:
                path: /
                port: {{ .Values.network.port.rgw_target }}
              initialDelaySeconds: 120
              timeoutSeconds: 5
          readinessProbe:
              httpGet:
                path: /
                port: {{ .Values.network.port.rgw_target }}
              timeoutSeconds: 5
          resources:
            requests:
              memory: {{ .Values.resources.rgw.requests.memory | quote }}
              cpu: {{ .Values.resources.rgwrequests.cpu | quote }}
            limits:
              memory: {{ .Values.resources.rgw.limits.memory | quote }}
              cpu: {{ .Values.resources.rgw.limits.cpu | quote }}
{{- end }}
